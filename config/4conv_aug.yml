data:
    path: "data/"
    mnist_path: "data/mnist"
    svhn_path: "data/svhn"
    cifar10_path: "data/cifar10"
    miniimagenet_path: "data/miniimagenet"
    image_size: 84
    num_workers: 6
    channels: 3

model:
    name: "OneShotAug"
    type: "conv"
    pretrained: False
    seed: 0
    arch: small_cnn #resnet,densenet
    transductive: False
    z_dim: 100  # Random noise dimension coming into generator, per output vector
    real_dim: 1024  #$image_size * image_size
    filters: 32
    conv1: 16
    conv2: 32
    conv3: 64
    conv4: 128
    use_dropout: False
    dropout: 0.3
    use_augmentation: True
    dataset: miniimagenet
    n_classes: 5 # number of data classes to sample.
    num_smaples_in_shot: 1 # number of examples per data class.
    train_shot: 15
train:
    model_dir: "outputs/4conv_aug"
    shuffle: true
    
    learning_rate: 0.001
    meta_lr: 0.001
    optim_betas:
        - 0
        - 0.999
    
    save_checkpoints_steps: 1000
    verbose_step_count: 50
    inner_batch_size: 10 # batch size for every inner-loop training iteration.
    inner_iters: 8 #n umber of inner-loop iterations.
    replacement: False # sample with replacement.
    meta_batch_size: 5 # how many inner-loops to run
    meta_iters: 100000 # epochs
eval:
    eval_inner_iters: 50
    inner_batch_size: 5 # batch size for every inner-loop training iteration.

slack:
    webhook_url: ""  # after training notify you using slack-webhook
    