data:
    path: "data/"
    mnist_path: "data/mnist"
    svhn_path: "data/svhn"
    cifar10_path: "data/cifar10"
    miniimagenet_path: "data/miniimagenet"
    image_size: 84
    num_workers: 6
    channels: 3

model:
    name: "OneShotAug"
    type: "conv"
    pretrained: False
    seed: 222
    arch: small_cnnn #resnet,densenet
    base_width: 4 #resnet params
    cardinality: 32 # resnet params
    depth: 29
    
    z_dim: 100  # Random noise dimension coming into generator, per output vector
    real_dim: 1024  #$image_size * image_size
    filters: 32
    conv1: 16
    conv2: 32
    conv3: 64
    conv4: 128
    use_dropout: True
    dropout: 0.3
    use_augmentation: False
    dataset: miniimagenet
#    total_train_classes: 65 #miniimagenet
#    total_valid_classes: 20 #miniimagenet
#    total_test_classes: 15 #miniimagenet
    n_classes: 5 # number of data classes to sample.
    num_smaples_in_shot: 1 # number of examples per data class.
train:
    model_dir: "outputs/4conv_b"
    batch_size: 64
    shuffle: true
    
    learning_rate: 0.0001  # 2e-4
    optim_betas:
        - 0.5
        - 0.999
    
    save_checkpoints_steps: 1000
    verbose_step_count: 50
    show_progrees_bar: False
    inner_batch_size: 8 # batch size for every inner-loop training iteration.
    inner_iters: 10 #n umber of inner-loop iterations.
    replacement: False # sample with replacement.
    meta_batch_size: 1 # how many inner-loops to run
    meta_iters: 100000 # epochs
eval:
    eval_inner_iters: 50
    inner_batch_size: 5 # batch size for every inner-loop training iteration.
predict:
    batch_size: 23

slack:
    webhook_url: ""  # after training notify you using slack-webhook
    